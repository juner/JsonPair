# 上位ディレクトリから .editorconfig 設定を継承する場合は、以下の行を削除します
root = true

# その他のファイル
[*.json, *.js, *.ts] 
end_of_line = lf
indent_size = 2
tab_width = 2

[*.js, *.ts]
insert_final_newline = true

[.vscode/*.json]
indent_size = 4
indent_style = space
tab_width = 4

[*.md]

# 改行設定
end_of_line = lf

# C# ファイル
[*.cs]

#### コア EditorConfig オプション ####

# インデントと間隔
indent_size = 4
indent_style = space
tab_width = 4

# 改行設定
end_of_line = crlf
insert_final_newline = true

#### .NET コーディング規則 ####

# using の整理
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false
file_header_template = unset

# this. と Me. の設定
dotnet_style_qualification_for_event = false:warning
dotnet_style_qualification_for_field = false:warning
dotnet_style_qualification_for_method = false:warning
dotnet_style_qualification_for_property = false:warning

# 言語キーワードと BCL の種類の設定
dotnet_style_predefined_type_for_locals_parameters_members = true:warning
dotnet_style_predefined_type_for_member_access = true:warning

# かっこの設定
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity:warning
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:warning
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity:warning

# 修飾子設定
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# 式レベルの設定
dotnet_style_coalesce_expression = true:warning
dotnet_style_collection_initializer = true:warning
dotnet_style_explicit_tuple_names = true:warning
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true:warning
dotnet_style_object_initializer = true:warning
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_compound_assignment = true:warning
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true:warning
dotnet_style_prefer_inferred_tuple_names = true:warning
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:warning
dotnet_style_prefer_simplified_boolean_expressions = true:warning
dotnet_style_prefer_simplified_interpolation = true

# フィールド設定
dotnet_style_readonly_field = true:warning

# パラメーターの設定
dotnet_code_quality_unused_parameters = all:warning

# 抑制の設定
dotnet_remove_unnecessary_suppression_exclusions = none

# 改行設定
dotnet_style_allow_multiple_blank_lines_experimental = true
dotnet_style_allow_statement_immediately_after_block_experimental = true

#### C# コーディング規則 ####

# var を優先
csharp_style_var_elsewhere = true:warning
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning

# 式のようなメンバー
csharp_style_expression_bodied_accessors = true:warning
csharp_style_expression_bodied_constructors = true:warning
csharp_style_expression_bodied_indexers = true:warning
csharp_style_expression_bodied_lambdas = true:warning
csharp_style_expression_bodied_local_functions = true:warning
csharp_style_expression_bodied_methods = true:warning
csharp_style_expression_bodied_operators = true:warning
csharp_style_expression_bodied_properties = true:warning

# パターン マッチング設定
csharp_style_pattern_matching_over_as_with_null_check = true:warning
csharp_style_pattern_matching_over_is_with_cast_check = true:warning
csharp_style_prefer_not_pattern = true:warning
csharp_style_prefer_pattern_matching = true:warning
csharp_style_prefer_switch_expression = true:warning

# Null チェック設定
csharp_style_conditional_delegate_call = true:warning

# 修飾子設定
csharp_prefer_static_local_function = true:warning
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async

# コード ブロックの設定
csharp_prefer_braces = true
csharp_prefer_simple_using_statement = true:warning
csharp_style_namespace_declarations = file_scoped:warning

# 式レベルの設定
csharp_prefer_simple_default_expression = true:warning
csharp_style_deconstructed_variable_declaration = true:warning
csharp_style_implicit_object_creation_when_type_is_apparent = true:warning
csharp_style_inlined_variable_declaration = true:warning
csharp_style_pattern_local_over_anonymous_function = true:warning
csharp_style_prefer_index_operator = true:warning
csharp_style_prefer_null_check_over_type_check = true:warning
csharp_style_prefer_range_operator = true:warning
csharp_style_throw_expression = true:warning
csharp_style_unused_value_assignment_preference = discard_variable:warning
csharp_style_unused_value_expression_statement_preference = discard_variable

# 'using' ディレクティブの基本設定
csharp_using_directive_placement = outside_namespace:warning

# 改行設定
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = true
csharp_style_allow_embedded_statements_on_same_line_experimental = true

#### C# 書式ルール ####

# 改行設定
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# インデント設定
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = true
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# スペース設定
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# 折り返しの設定
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### 命名スタイル ####

# 命名規則

dotnet_naming_rule.名前空間_should_be_パスカルケース.severity = warning
dotnet_naming_rule.名前空間_should_be_パスカルケース.symbols = 名前空間
dotnet_naming_rule.名前空間_should_be_パスカルケース.style = パスカルケース

dotnet_naming_rule.インターフェース_should_be_iで始まる.severity = warning
dotnet_naming_rule.インターフェース_should_be_iで始まる.symbols = インターフェース
dotnet_naming_rule.インターフェース_should_be_iで始まる.style = iで始まる

dotnet_naming_rule.インターフェース以外の型_should_be_パスカルケース.severity = warning
dotnet_naming_rule.インターフェース以外の型_should_be_パスカルケース.symbols = インターフェース以外の型
dotnet_naming_rule.インターフェース以外の型_should_be_パスカルケース.style = パスカルケース

dotnet_naming_rule.ジェネリックの型引数_should_be_tで始まる.severity = warning
dotnet_naming_rule.ジェネリックの型引数_should_be_tで始まる.symbols = ジェネリックの型引数
dotnet_naming_rule.ジェネリックの型引数_should_be_tで始まる.style = tで始まる

dotnet_naming_rule.定数_should_be_パスカルケース.severity = warning
dotnet_naming_rule.定数_should_be_パスカルケース.symbols = 定数
dotnet_naming_rule.定数_should_be_パスカルケース.style = パスカルケース

dotnet_naming_rule.静的読み取り専用フィールド_should_be_パスカルケース.severity = warning
dotnet_naming_rule.静的読み取り専用フィールド_should_be_パスカルケース.symbols = 静的読み取り専用フィールド
dotnet_naming_rule.静的読み取り専用フィールド_should_be_パスカルケース.style = パスカルケース

dotnet_naming_rule.プライベートフィールド_should_be__で始まる.severity = warning
dotnet_naming_rule.プライベートフィールド_should_be__で始まる.symbols = プライベートフィールド
dotnet_naming_rule.プライベートフィールド_should_be__で始まる.style = _で始まる

dotnet_naming_rule.プライベート以外のフィールド_should_be_パスカルケース.severity = warning
dotnet_naming_rule.プライベート以外のフィールド_should_be_パスカルケース.symbols = プライベート以外のフィールド
dotnet_naming_rule.プライベート以外のフィールド_should_be_パスカルケース.style = パスカルケース

dotnet_naming_rule.非同期メソッド_should_be_asyncで終わる.severity = warning
dotnet_naming_rule.非同期メソッド_should_be_asyncで終わる.symbols = 非同期メソッド
dotnet_naming_rule.非同期メソッド_should_be_asyncで終わる.style = asyncで終わる

dotnet_naming_rule.フィールド以外のメンバー_should_be_パスカルケース.severity = warning
dotnet_naming_rule.フィールド以外のメンバー_should_be_パスカルケース.symbols = フィールド以外のメンバー
dotnet_naming_rule.フィールド以外のメンバー_should_be_パスカルケース.style = パスカルケース

dotnet_naming_rule.引数_should_be_キャメルケース.severity = warning
dotnet_naming_rule.引数_should_be_キャメルケース.symbols = 引数
dotnet_naming_rule.引数_should_be_キャメルケース.style = キャメルケース

dotnet_naming_rule.ローカル関数_should_be_パスカルケース.severity = warning
dotnet_naming_rule.ローカル関数_should_be_パスカルケース.symbols = ローカル関数
dotnet_naming_rule.ローカル関数_should_be_パスカルケース.style = パスカルケース

dotnet_naming_rule.ローカル変数_should_be_キャメルケース.severity = warning
dotnet_naming_rule.ローカル変数_should_be_キャメルケース.symbols = ローカル変数
dotnet_naming_rule.ローカル変数_should_be_キャメルケース.style = キャメルケース

# 記号の仕様

dotnet_naming_symbols.インターフェース.applicable_kinds = interface
dotnet_naming_symbols.インターフェース.applicable_accessibilities = *
dotnet_naming_symbols.インターフェース.required_modifiers =

dotnet_naming_symbols.インターフェース以外の型.applicable_kinds = class, struct, enum
dotnet_naming_symbols.インターフェース以外の型.applicable_accessibilities = *
dotnet_naming_symbols.インターフェース以外の型.required_modifiers =

dotnet_naming_symbols.フィールド以外のメンバー.applicable_kinds = property, event, delegate, method
dotnet_naming_symbols.フィールド以外のメンバー.applicable_accessibilities = *
dotnet_naming_symbols.フィールド以外のメンバー.required_modifiers =

dotnet_naming_symbols.非同期メソッド.applicable_kinds = method, local_function
dotnet_naming_symbols.非同期メソッド.applicable_accessibilities = *
dotnet_naming_symbols.非同期メソッド.required_modifiers = async

dotnet_naming_symbols.ジェネリックの型引数.applicable_kinds = type_parameter
dotnet_naming_symbols.ジェネリックの型引数.applicable_accessibilities = *
dotnet_naming_symbols.ジェネリックの型引数.required_modifiers =

dotnet_naming_symbols.プライベートフィールド.applicable_kinds = field
dotnet_naming_symbols.プライベートフィールド.applicable_accessibilities = private
dotnet_naming_symbols.プライベートフィールド.required_modifiers =

dotnet_naming_symbols.静的読み取り専用フィールド.applicable_kinds = field
dotnet_naming_symbols.静的読み取り専用フィールド.applicable_accessibilities = *
dotnet_naming_symbols.静的読み取り専用フィールド.required_modifiers = readonly, static

dotnet_naming_symbols.定数.applicable_kinds = field, local
dotnet_naming_symbols.定数.applicable_accessibilities = *
dotnet_naming_symbols.定数.required_modifiers = const

dotnet_naming_symbols.引数.applicable_kinds = parameter
dotnet_naming_symbols.引数.applicable_accessibilities = *
dotnet_naming_symbols.引数.required_modifiers =

dotnet_naming_symbols.ローカル変数.applicable_kinds = local
dotnet_naming_symbols.ローカル変数.applicable_accessibilities = *
dotnet_naming_symbols.ローカル変数.required_modifiers =

dotnet_naming_symbols.名前空間.applicable_kinds = namespace
dotnet_naming_symbols.名前空間.applicable_accessibilities = *
dotnet_naming_symbols.名前空間.required_modifiers =

dotnet_naming_symbols.ローカル関数.applicable_kinds = local_function
dotnet_naming_symbols.ローカル関数.applicable_accessibilities = *
dotnet_naming_symbols.ローカル関数.required_modifiers =

dotnet_naming_symbols.プライベート以外のフィールド.applicable_kinds = field
dotnet_naming_symbols.プライベート以外のフィールド.applicable_accessibilities = public, internal, protected, protected_internal, private_protected
dotnet_naming_symbols.プライベート以外のフィールド.required_modifiers =

# 命名スタイル

dotnet_naming_style.パスカルケース.required_prefix =
dotnet_naming_style.パスカルケース.required_suffix =
dotnet_naming_style.パスカルケース.word_separator =
dotnet_naming_style.パスカルケース.capitalization = pascal_case

dotnet_naming_style.iで始まる.required_prefix = I
dotnet_naming_style.iで始まる.required_suffix =
dotnet_naming_style.iで始まる.word_separator =
dotnet_naming_style.iで始まる.capitalization = pascal_case

dotnet_naming_style.asyncで終わる.required_prefix =
dotnet_naming_style.asyncで終わる.required_suffix = Async
dotnet_naming_style.asyncで終わる.word_separator =
dotnet_naming_style.asyncで終わる.capitalization = pascal_case

dotnet_naming_style.tで始まる.required_prefix = T
dotnet_naming_style.tで始まる.required_suffix =
dotnet_naming_style.tで始まる.word_separator =
dotnet_naming_style.tで始まる.capitalization = pascal_case

dotnet_naming_style._で始まる.required_prefix = _
dotnet_naming_style._で始まる.required_suffix =
dotnet_naming_style._で始まる.word_separator =
dotnet_naming_style._で始まる.capitalization = camel_case

dotnet_naming_style.キャメルケース.required_prefix =
dotnet_naming_style.キャメルケース.required_suffix =
dotnet_naming_style.キャメルケース.word_separator =
dotnet_naming_style.キャメルケース.capitalization = camel_case

dotnet_diagnostic.IDE0051.severity=warning
dotnet_diagnostic.IDE0052.severity=warning
dotnet_diagnostic.IDE0064.severity=warning
dotnet_diagnostic.IDE0076.severity=warning
dotnet_diagnostic.IDE0077.severity=warning
dotnet_diagnostic.IDE0043.severity=warning
dotnet_diagnostic.CA1507.severity=warning
dotnet_diagnostic.CA1805.severity=warning
dotnet_diagnostic.CA2016.severity=warning

dotnet_diagnostic.CA1832.severity=warning
dotnet_diagnostic.CA1833.severity=warning
dotnet_diagnostic.CA1834.severity=warning
dotnet_diagnostic.CA2012.severity=warning
dotnet_diagnostic.IDE0033.severity=warning
dotnet_diagnostic.IDE0044.severity=warning

dotnet_diagnostic.IDE1006.severity=warning